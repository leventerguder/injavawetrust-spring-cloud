spring:
  application:
    name: config-server
    # By default, if no application name is set, application will be used.
  profiles:
    active: native
  cloud:
    config:
      server:
        native:
          search-locations: classpath:/local-config-repository
## We will use the filesystem/classpath for storing application configuration information,
## we must tell the Spring Cloud Config Server to run with the native profile.

## The classpath attribute causes Spring Cloud Config Server to look in the src/main/resources/local-config-repository
server:
  port: 8071

# Using the local filesystem for your git repository is intended for testing only.
# You should use a server to host your configuration repositories in production.

# There is also a "native" profile in the Config Server that does not use Git but loads the config files from
# the local classpath or file system (any static URL you want to point to with spring.cloud.config.server.native.searchLocations).
# To use the native profile, launch the Config Server with spring.profiles.active=native.
